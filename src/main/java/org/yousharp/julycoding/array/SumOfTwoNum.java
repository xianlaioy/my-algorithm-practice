package org.yousharp.julycoding.array;

/**
 * 问题描述：
 *  输入一个数组和一个数字，在数组中查找两个数，使得它们的和正好是输入的那个数字。
 *  要求时间复杂度是O(N)。如果有多对数字的和等于输入的数字，输出任意一对即可。
 *  例如输入数组1、2、4、7、11、15和数字15。由于4+11=15，因此输出4和11。
 *
 * 思路：
 *  【讨论一】：如果数组是有序的，则使用两个指针，一个指向数组的首元素，另一个指向数组的尾元素，
 *  求它们的和，如果和比定值大，则尾指针后退，如果和比定值小，则手指针前进，如果和与定值相等，
 *  则这两个数即为所求，否则遍历知道两个指针相遇；
 *
 *  【讨论二】：如果数组无序，则如果先对数组排序，则时间复杂度为O(nlogn)，然后遍历，时间复杂度为O(n)，总的
 *  复杂度为O(nlogn)；要想降低时间复杂度，只能以空间换时间，对定值和数组中的每一个值求差值，将差值作为key
 *  构造一个HashTable，然后遍历每一个整数，如果HashTable中存在该整数作为key的项，则表示差值也在该数组中，
 *  这两个数即为所求。
 *
 * 参考：https://github.com/nkcoder/The-Art-Of-Programming-By-July/blob/master/ebook/zh/02.02.md
 *
 * User: lingguo
 * Date: 14-8-4 下午10:11
 */
public class SumOfTwoNum {
}
