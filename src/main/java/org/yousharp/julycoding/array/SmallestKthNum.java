package org.yousharp.julycoding.array;

/**
 * 问题描述：
 *  输入n个整数，输出其中最小的k个数；
 *
 * 思路：
 *  【思路一】：如果n的值不大，可以先排序，如快速排序，然后取k个最小的数即可；
 *      复杂度为O(nlogn)；
 *
 *  【思路二】：如果n的值较大，则不需要对所有的数进行排序，只需找到最小的k个数即可。借助堆的
 *  思路，将任意k个数放到数组里，作为最小的k个数，并找到最大值max，然后遍历剩下的(n-k)个数，如
 *  果值比max大，则交换，binggengxin数组中最大值max；遍历完毕，数组中的k个数即为所求。
 *      复杂度为O(nk)；
 *
 *  【思路三】：使用最大堆，堆的元素个数为k，堆顶为最大值，遍历剩下的(n-k)个数，每次都与堆顶比，
 *  如果比堆顶小，则互换，将堆调整为最大堆；遍历结束，则堆中的元素即为所求。
 *      复杂度O(nlogk)
 *
 *  【思路四】：借鉴快速排序的思路，选择一个哨兵元素x，将n个元素分为两部分S1和S2，S1中的元素都
 *  小于x，元素个数为n1，S2中的元素都大于x，元素个数为n2，比较k与n1(也可以是n2)：
 *      - 如果k < n1，则最小的k个数都在S1中，继续在S1中找最小的k个数；
 *      - 如果k = n1，则最小k的个数即为S1中的元素；
 *      - 如果k > n1，则S1中的元素为最小的k个数的一部分，另外(k-n1)个数在S2中继续寻找即可。
 *      复杂度O(n)；
 *
 * 参考：https://github.com/nkcoder/The-Art-Of-Programming-By-July/blob/master/ebook/zh/02.01.md
 *
 * User: lingguo
 * Date: 14-8-4 下午9:28
 */
public class SmallestKthNum {

}
